====================================
 Doctest for matrix_divided function
====================================


Import function
=================
>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

>>> matrix_divided([[]], 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/kali/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 62, in matrix_divided
    raise TypeError(s)
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[],[]], 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/kali/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 62, in matrix_divided
    raise TypeError(s)
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([1, 2, 3], 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/kali/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 62, in matrix_divided
    raise TypeError(s)
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([1, 2, 3],[5,4,3], 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_divided() takes 2 positional arguments but 3 were given

>>> matrix_divided([[1, 2, 3],[5,4,3]], 2)
[[0.5, 1.0, 1.5], [2.5, 2.0, 1.5]]

>>> matrix_divided({"3": 4}, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/kali/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 62, in matrix_divided
    raise TypeError(s)
TypeError: matrix must be a matrix (list of lists) of integers/floats
