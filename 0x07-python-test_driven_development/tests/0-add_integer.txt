====================================
 Doctest for add_integer function
====================================

Import function
=================
>>> add_integer = __import__('0-add_integer').add_integer

>>> add_integer(2, 8)
10

>>> add_integer(2)
100

>>> add_integer(2, "hello")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/kali/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 18, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer

>>> add_integer("hello", 5)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/kali/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 16, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

>>> add_integer("hello")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/kali/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 16, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

>>> add_integer("A")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/kali/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 16, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

>>> add_integer({2,4}, 7)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/kali/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 16, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

>>> add_integer(5, (9,4))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/kali/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 18, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer

>>> add_integer(5.909999, 3.999999)
8

>>> add_integer(5.909999, 3)
8

>>> add_integer(-8.0, -3.0)
-11

>>> add_integer([3, 2], 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/kali/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 16, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

>>> add_integer(2, [2, 8])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/kali/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 18, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer

>>> add_integer()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer([3, 2], [2, 7])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/kali/Desktop/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 16, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
